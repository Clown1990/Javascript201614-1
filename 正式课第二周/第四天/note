1.什么是正则：用来操作字符串的规则；
正则就是用来操作（校验，捕获）“字符串”的
1）校验：返回布尔值 true：符合规则 false：不合格；
2）捕获：把符合规则内容拎出来；
2.正则表达式由两部分组成：元字符 修饰符
var re=/\d+/g;
两个斜杠之间的都是元字符;
斜杠外面的是修饰符；
3.元字符包含：代表特殊含义的元字符+代表次数的量词元字符
1）代表特殊含义的元字符
\转义
|或
()小分组
.除了\n以外的其他字符
\n 换行
\b 开头结尾和空格
^开头
$结尾
\s 空格； \S 非空格
\d 数字； \D 非数字
\w 数字字母下划线； \W 非数字字母下划线

[a-z]字母 [^a-z] 非字母
[abc]abc三者中的任何一个；[^abc]除了abc三者中的任何一个；
2）代表次数的量词元字符
* 0到多
+ 1到多
？ 0||1次
{n} 正好n次
{n,} n到多
{n,m} n次到m次
4.修饰符；
g 全局
i 忽略大小写
m 换行
5.什么时候加开头和结尾：
如果从一段字符串中，查找是否包含某个小字符-不要加开头和结尾
严格匹配，必须加开头和结尾；
6.中括号[]的用法：
1）中括号中放的类似于+,.等特殊符号都没有特殊含义；
2）中括号中不会出现两位数
7.当//中遇到|的时候；最好用()提高优先级； reg=/^(18|19)$/;


